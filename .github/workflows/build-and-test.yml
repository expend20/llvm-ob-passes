name: Build and Test

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**' 

jobs:
  llvm:
    strategy:
      matrix:
        llvm-version: [16, 17, 18]
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install LLVM and Clang
      run: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh ${{ matrix.llvm-version }}

    - name: Replace default clang
      run: |
        sudo mv /usr/bin/clang /usr/bin/clang-old
        sudo mv /usr/bin/clang++ /usr/bin/clang++-old
        sudo ln -s /usr/bin/clang-${{ matrix.llvm-version }} /usr/bin/clang
        sudo ln -s /usr/bin/clang++-${{ matrix.llvm-version }} /usr/bin/clang++
        sudo ln -s /usr/bin/opt-${{ matrix.llvm-version }} /usr/bin/opt

    - name: Check LLVM and Clang
      run: clang --version && opt --version 

    - name: Configure CMake with Clang
      run: cmake -B build -DLLVM_DIR=/usr/lib/llvm-${{ matrix.llvm-version }}/cmake -DCMAKE_C_COMPILER=clang-${{ matrix.llvm-version }} -DCMAKE_CXX_COMPILER=clang++-${{ matrix.llvm-version }}

    - name: Build
      run: cmake --build build -t run_test

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: libpasses-${{ matrix.llvm-version }}
        path: libpasses-${{ matrix.llvm-version }}.so

  release:
    needs: llvm
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create release archive
      run: |
        mkdir release
        cp libpasses-*/*.so release/
        cd release
        tar -czvf libpasses.tar.gz *.so

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/libpasses.tar.gz
        asset_name: libpasses.tar.gz
        asset_content_type: application/gzip
